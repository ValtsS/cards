name: CI

on: push

jobs:
  build-and-test:
    runs-on: [self-hosted, linux, x64]
    timeout-minutes: 10
    if: ${{ github.event.repository.owner.login == github.actor }}
    steps:
      - uses: actions/checkout@v3
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
      - name: Install dependencies
        run: npm ci
      - name: Strict checks
        run: npm run check-strict
      - name: Build dev and prod code
        run: npm run build
      - name: Unit Test
        run: npm run coverage:jest
      - name: Debug
        run: pwd && ls -l

  cypress:
    runs-on: [self-hosted, linux, x64]
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        mode: [dev, prod]
    needs: [build-and-test]
    env:
      CYPRESS_BASE_URL: 'http://localhost:599${{ matrix.mode == "dev" ? 9 : 8 }}'
      PORT: '599${{ matrix.mode == "dev" ? 9 : 8 }}'
    steps:
      - uses: actions/checkout@v3
      - name: Debug
        run: pwd && echo
      - name: Check file existence
        run: |
          if [ -e "server.pid" ]; then
            echo "Clean location expected!"
            exit 1
          fi
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
      - name: Install dependencies
        run: npm ci
      - name: Strict checks
        run: npm run check-strict
      - name: Build dev and prod code
        run: npm run build
      - name: Start test ${{ matrix.mode }} server
        run: nohup npm run ${{ matrix.mode }} > ./server.log 2>&1 & echo $! > server.pid && sleep 4s && cat ./server.log
      - name: Run Cypress
        run: sleep 5s && npm run test:e2e
      - name: Stop test server
        if: always()
        run: pkill -F server.pid || true
      - name: Output log if failed
        if: ${{ always() }} && failure()
        run: cat ./server.log && cat ./package.json && pwd

  sonarqube:
    runs-on: [self-hosted, linux, x64]
    needs: build-and-test
    strategy:
      fail-fast: false
      matrix:
        mode: [sonar]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Sonarqube
        run: npm run sonar
